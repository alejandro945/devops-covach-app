controller:
  servicePort: 8080
  serviceType: ClusterIP
  runAsUser: 1000
  
  containerSecurityContext: 
    runAsUser: 0 
    runAsGroup: 0 
    readOnlyRootFilesystem: false 
    allowPrivilegeEscalation: true
  
  podSecurityContextOverride:
    runAsUser: 1000
    runAsNonRoot: false
    supplementalGroups: [1000]

  #podSecurityContextOverride:
  #  runAsNonRoot: true
  #  runAsUser: 0
  
  scriptApproval:
    - "method groovy.json.JsonSlurperClassic parseText java.lang.String"
    - "new groovy.json.JsonSlurperClassic"
    - "staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods leftShift java.util.Map java.util.Map"
    - "staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods split java.lang.String"
  installPlugins:
    - kubernetes:3734.v562b_b_a_627ea_c
    - workflow-aggregator:590.v6a_d052e5a_a_b_5
    - git:4.13.0
    - configuration-as-code:1569.vb_72405b_80249

  ingress:
    enabled: true
    paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jenkins
            port:
              number: 8080
        
    annotations: 
      kubernetes.io/ingress.class: azure/application-gateway
    apiVersion: "extensions/v1beta1"
    hostName: jenkins.juanballesteros.engineer

agent:
  volumes:
    #- type: HostPath
    #  hostPath: /var/run/docker.sock
    #  mountPath: /var/run/docker.sock
    - type: PVC
      claimName: jenkins-pvc
      mountPath: /var/run/docker.sock
      readOnly: false  

persistence:
  enabled: true
  existingClaim: jenkins-pvc

networkPolicy:
  enabled: false
  apiVersion: networking.k8s.io/v1

rbac:
  create: true


